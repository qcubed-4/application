<?php
/**
 *
 * Part of the QCubed PHP framework.
 *
 * @license MIT
 *
 */

namespace QCubed\Control;

require_once(dirname(__DIR__, 2) . '/i18n/i18n-lib.inc.php');

use QCubed\Exception\Caller;
use QCubed\Exception\InvalidCast;
use QCubed\Project\Control\TextBox;
use QCubed\Type;

/**
 * A subclass of TextBox that validates and sanitizes emails.
 *
 * @package QCubed\Control
 */
class EmailTextBox extends TextBox
{
    /** @var int|null */
    protected ?int $intSanitizeFilter = FILTER_SANITIZE_EMAIL;
    /** @var int|null */
    protected ?int $intValidateFilter = FILTER_VALIDATE_EMAIL;

    /**
     * Constructor for initializing the object with a parent control or form and an optional control ID.
     *
     * @param ControlBase|FormBase $objParentObject The parent object that this control or form is associated with.
     * @param string|null $strControlId Optional ID for the control, which can be null for an autogenerated ID.
     *
     * @throws Caller
     */
    public function __construct(ControlBase|FormBase $objParentObject, ?string $strControlId = null)
    {
        parent::__construct($objParentObject, $strControlId);
        $this->strLabelForInvalid = t('Invalid Email Address');
        $this->strTextMode = TextBoxBase::EMAIL;
    }

    /**
     * Validates the current object state based on predefined rules and constraints.
     *
     * If multiple emails are not allowed and a validation filter is defined,
     * the input text is checked against the specified filter. If the input
     * fails validation, an error message is set, and the validation fails.
     *
     * @return bool Returns true if the validation is successful, otherwise false.
     */
    public function validate(): bool
    {
        $blnValid = parent::validate();

        if ($blnValid && $this->intValidateFilter && $this->strText !== '') {
            $validateOptions = $this->mixValidateFilterOptions ?? 0;
            if (!filter_var($this->strText, $this->intValidateFilter, $validateOptions)) {
                $this->ValidationError = $this->strLabelForInvalid ?? t('Invalid Email Address');
                $blnValid = false;
            }
        }

        return $blnValid;
    }
}