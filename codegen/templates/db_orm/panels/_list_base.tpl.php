<?php
    /** @var SqlTable $objTable */
use QCubed\Project\Codegen\CodegenBase;

/** @var \QCubed\Codegen\DatabaseCodeGen $objCodeGen */
    global $_TEMPLATE_SETTINGS;

    $strPropertyName = CodegenBase::dataListPropertyName($objTable);

    $_TEMPLATE_SETTINGS = array(
        'OverwriteFlag' => true,
        'DirectorySuffix' => '',
        'TargetDirectory' => QCUBED_PROJECT_PANEL_GEN_DIR,
        'TargetFileName' => $strPropertyName . 'ListPanelGen.php'
    );

    $listCodegenerator = $objCodeGen->getDataListCodeGenerator($objTable);
    $strListVarName = $objCodeGen->dataListVarName($objTable);
    $options = $objTable->Options;

    // Check codegen settings file to see if we want to use a dialog or a form to edit a record
    $blnUseDialog = (isset($options['EditMode']) && $options['EditMode'] == 'dialog');

    $blnUseFilter = !$listCodegenerator->dataListHasFilter();

    if (isset($objTable->Options['CreateFilter'])) {
        $blnUseFilter = $objTable->Options['CreateFilter'];
    }

?>
<?php print("<?php\n"); ?>

use QCubed\Control\Panel;
use QCubed\Project\Application;
use QCubed\Exception\Caller;
use QCubed\Exception\InvalidCast;
use QCubed\Event\Click;
use QCubed\Event\CellClick;
use QCubed\Action\AjaxControl;
use QCubed\Action\Terminate;
use QCubed\Query\QQ;
use QCubed\Event\EnterKey;
use QCubed\Event\Input;
use QCubed\Project\Control\TextBox;
use QCubed\Control\TextBoxBase;
use QCubed\Project\Control\Button;
use QCubed\Query\Condition\ConditionInterface as QQCondition;

<?php if ($blnUseDialog) {
    ?>
	include (QCUBED_PROJECT_DIALOG_DIR . '/<?= $strPropertyName ?>EditDlg.php');
<?php 
} ?>

/**
 * This is the base list class for the <?= $strPropertyName ?> class.
 *
 * Do not edit this file, this file is overwritten on any code regenerations. Make any changes you need to the subclass.
 *
 */
abstract class <?= $strPropertyName ?>ListPanelGen extends Panel
{
<?php include("list_protected_member_variables.tpl.php"); ?>

    /**
    * Constructor method for initializing the class instance.
    *
    * @param mixed $objParent The parent object or control
    * @param string|null $strControlId The optional control ID
    * @throws Caller
    */
    public function __construct(mixed $objParent, ?string $strControlId = null)
    {
        parent::__construct($objParent, $strControlId);
<?= $listCodegenerator->dataListInstantiate($objCodeGen, $objTable); ?>
<?php if ($blnUseDialog) {
    ?>
        $this->dlgEdit = new <?= $strPropertyName ?>EditDlg($this);
<?php 
} ?>
<?php if ($blnUseFilter) {
    ?>
        $this->createFilterPanel();
<?php 
} ?>
<?php if ($blnUseFilter) {
    ?>
        $this-><?= $strListVarName ?>->setDataBinder('BindData', $this);
<?php 
} ?>
        $this->createButtonPanel();
    }

<?= $listCodegenerator->dataListHelperMethods($objCodeGen, $objTable); ?>


<?php if ($blnUseFilter) {
    ?>
<?php include("list_createFilter.tpl.php"); ?>
<?php include("list_createDataBinder.tpl.php"); ?>
<?php 
} ?>

<?php include("list_createButtons.tpl.php"); ?>

<?php include("list_edit_item.tpl.php"); ?>

}